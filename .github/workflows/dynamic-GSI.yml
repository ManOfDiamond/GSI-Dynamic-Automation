name: Building Dynamic GSI..

on: [push]

env:
  ROM_URL: https://tdrive.elytra8.workers.dev/OnePlus7ProHydrogen_21.H.31_OTA_031_all_2011091840_0a74aa44f9c8c7.zip
  ROM_NAME: OxygenOS
  FZIPNAME: OnePlus7ProHydrogen_21.H.31_OTA_031_all_2011091840_0a74aa44f9c8c7.zip
  ZIP_NAME: OnePlus7Pro_Dynamic
  TZ: Asia/Kolkata
jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
       - name: Checkout
         uses: actions/checkout@master
       
       - name: Clean Up
         run: |
           docker rmi `docker images -q` &> /dev/null
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d &> /dev/null
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* &> /dev/null
           sudo -E apt-get update &> /dev/null
           sudo -E apt-get -y autoremove --purge &> /dev/null
           sudo -E apt-get clean &> /dev/null
           
       - name: Initializing environment
         run: |
            sudo -E apt-get -qq update &> /dev/null
            sudo -E apt-get -qq install git openjdk-8-jdk wget expect &> /dev/null 

       
       - name: Clone ErfanGSI Tools
         run: git clone --recurse-submodules https://github.com/Area69Lab/ErfanGSIs &> /dev/null
       
       - name: Setting up ErfanGSI Tools requirements
         run: |
              sudo chmod -R 777 ErfanGSIs
              cd ErfanGSIs
              sudo bash setup.sh &> /dev/null
       
       - name: Make Dynamic GSI
         run: |
              cd ErfanGSIs
              wget $ROM_URL &> /dev/null
              sudo bash dyn.sh $ROM_NAME $FZIPNAME
              sudo bash url2GSI.sh working/system $ROM_NAME
       - name: Print build info
         run: |
              cat ErfanGSIs/output/*-AB-*.txt
       - name: Zip Aonly and upload 
         run: |
              sudo chmod -R 777 ErfanGSIs/output
              cd ErfanGSIs/output
              zip -r $ZIP_NAME-GSI-Aonly-nippongsi.7z *-Aonly-*.img &> /dev/null
              expect -c " 
              spawn sftp ${{ secrets.SFUSER }}@frs.sourceforge.net
              expect \"yes/no\"
              send \"yes\r\"
              expect \"Password\"        
              send \"${{ secrets.SFPASS }}\r\"
              expect \"sftp> \"
              send \"cd ${{ secrets.SFDIR }}\r\"
              set timeout -1
              send \"put $ZIP_NAME-GSI-Aonly-nippongsi.7z\r\"
              expect \"Uploading\"
              expect \"100%\"
              expect \"sftp>\"
              send \"bye\r\"
              interact"      
       - name: Zip AB and upload 
         run: |
              cd ErfanGSIs/output
              zip -r $ZIP_NAME-GSI-AB-nippongsi.7z *-AB-*.img &> /dev/null
              expect -c " 
              spawn sftp ${{ secrets.SFUSER }}@frs.sourceforge.net
              expect \"Password\"        
              send \"${{ secrets.SFPASS }}\r\"
              expect \"sftp> \"
              send \"cd ${{ secrets.SFDIR }}\r\"
              set timeout -1
              send \"put $ZIP_NAME-GSI-AB-nippongsi.7z\r\"
              expect \"Uploading\"
              expect \"100%\"
              expect \"sftp>\"
              send \"bye\r\"
              interact"
            
